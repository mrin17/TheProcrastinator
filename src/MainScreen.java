/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
import java.util.ArrayList;
import java.util.Date;
import javax.swing.*;
import java.awt.Dimension;
import java.awt.*;
import java.text.SimpleDateFormat;
/**
 *
 * @author Michael
 */
public class MainScreen extends javax.swing.JFrame {

    /**
     * Creates new form MainScreen
     */
    public MainScreen() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTasksToday = new javax.swing.JLabel();
        spnScrollPane = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        btnProcrastinate = new javax.swing.JButton();
        btnAddTask = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        btnLeft = new javax.swing.JButton();
        btnRight = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        lblTasksToday.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblTasksToday.setText("Tasks:");

        jPanel1.setFocusable(false);
        jPanel1.setMaximumSize(new java.awt.Dimension(181, 32487));
        jPanel1.setPreferredSize(new java.awt.Dimension(181, 181));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 264, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 343, Short.MAX_VALUE)
        );

        spnScrollPane.setViewportView(jPanel1);

        btnProcrastinate.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnProcrastinate.setText("Procrastinate");
        btnProcrastinate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcrastinateActionPerformed(evt);
            }
        });

        btnAddTask.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        btnAddTask.setText("Add Task");
        btnAddTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddTaskActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jButton1.setText("Schedule");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        btnLeft.setText("<");
        btnLeft.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLeftActionPerformed(evt);
            }
        });

        btnRight.setText(">");
        btnRight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRightActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        jButton2.setBackground(new java.awt.Color(0, 0, 0));
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("O");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(13, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 266, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnLeft)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTasksToday)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRight))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnProcrastinate, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddTask)))
                .addContainerGap())
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLeft)
                    .addComponent(lblTasksToday, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnRight))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(spnScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(btnProcrastinate)
                    .addComponent(btnAddTask))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddTaskActionPerformed
        // go to the add task screen
        AddTask addtask = new AddTask(this, true);
        addtask.show(); 
    }//GEN-LAST:event_btnAddTaskActionPerformed

    public AddTask newAddTaskIndex(int i) {
        AddTask addtask = new AddTask(this, true, i);
        addtask.show();
        return addtask;
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Schedule schedule = new Schedule(this, true);
        schedule.show(); 
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
        SimpleDateFormat formatter = new SimpleDateFormat( "MM/dd/yyyy" );
        lblTasksToday.setText("Tasks: "+formatter.format(currentDay));
        tomorrow.setDate(today.getDate()+1);
        tomorrow.setHours(0);
        tomorrow.setMinutes(0);
        tomorrow.setSeconds(0);
        today.setHours(0);
        today.setMinutes(0);
        today.setSeconds(0);
        currentDay.setHours(0);
        currentDay.setMinutes(0);
        currentDay.setSeconds(0);
        nextCurrentDay.setDate(currentDay.getDate()+1);
        nextCurrentDay.setHours(0);
        nextCurrentDay.setMinutes(0);
        nextCurrentDay.setSeconds(0);
    }//GEN-LAST:event_formWindowActivated

    private void btnProcrastinateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcrastinateActionPerformed
        int res = JOptionPane.showConfirmDialog(this,"Are you sure you want to move all of this day's tasks to the next day?");
        if (res == 0) {
            //move all tasks to tomorrow
            for (int i = 0; i < taskList.size(); i++) {
                Task t = taskList.get(i);
                if (isToday(t)) {
                    //move it to tomorrow
                    t.startdate.setDate(t.startdate.getDate()+1);
                    taskList.remove(i);
                    i--;
                    addTask(t);
                } 
            }
            reformat();
            JOptionPane.showMessageDialog(this,"All of your tasks for this day have been moved to the next day.");
       }
    }//GEN-LAST:event_btnProcrastinateActionPerformed

    private void btnLeftActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLeftActionPerformed
        currentDay.setDate(currentDay.getDate()-1);
        nextCurrentDay.setDate(nextCurrentDay.getDate()-1);
        SimpleDateFormat formatter = new SimpleDateFormat( "MM/dd/yyyy" );
        lblTasksToday.setText("Tasks: "+formatter.format(currentDay));
        reformat();
    }//GEN-LAST:event_btnLeftActionPerformed

    private void btnRightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRightActionPerformed
        currentDay.setDate(currentDay.getDate()+1);
        nextCurrentDay.setDate(nextCurrentDay.getDate()+1);
        SimpleDateFormat formatter = new SimpleDateFormat( "MM/dd/yyyy" );
        lblTasksToday.setText("Tasks: "+formatter.format(currentDay));
        reformat();
    }//GEN-LAST:event_btnRightActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    public void addTask(Task nTask) {
        boolean added = false;
        for (int i = 0; i < taskList.size(); i++) {
            if (taskList.get(i).startdate.after(nTask.startdate)) {
                taskList.add(i+1, nTask);
                added = true;
            }
        }
        if (!added) {
            taskList.add(nTask);
        }
        displayTask(nTask, taskList.size()-1);
    }
    
    public boolean isToday(Task nTask) {
        return (nTask.startdate.compareTo(currentDay) >= 0 && nTask.startdate.compareTo(nextCurrentDay) < 0);
    }
    
    public void displayTask(Task nTask, int where) {
        if (isToday(nTask)) {
            JPanel taskPanel = new JPanel();
            taskPanel.setName(""+where);
            JLabel txt = new JLabel(nTask.name);
            JButton button = new JButton();
            button.setName(""+where);
            button.setText("Edit");
            button.addActionListener(listener);
            JLabel times = new JLabel();
            JSlider sld = new JSlider();
            sld.setName(""+where);
            sld.setExtent(0);
            sld.setValue(nTask.completion);
            sld.addChangeListener(slistener);
            if (nTask.completion == 100)
                taskPanel.setBackground(Color.green);  
            else
                taskPanel.setBackground(Color.white);
            txt.setSize(50, 10);
            taskPanel.add(txt);
            taskPanel.add(times);
            taskPanel.add(button);
            taskPanel.add(sld);
            taskPanel.setSize(182, 70);
            taskPanel.setBorder(BorderFactory.createLineBorder(Color.BLACK, 1));
            txt.setText(nTask.name);
            String starttemptext = ""; 
            int starthours = nTask.startdate.getHours();
            String startsuffix = "am";
            String endtemptext = "";
            int endhours = nTask.startdate.getHours();
            String endsuffix = "am";
            if (starthours > 12) {
                startsuffix = "pm";
                starthours -= 12;
            }
            if (endhours > 12) {
                endsuffix = "pm";
                endhours -= 12;
            }
            starttemptext = starthours+":"+nTask.startdate.getMinutes()+startsuffix;
            endtemptext = endhours+":"+nTask.enddate.getMinutes()+endsuffix;
            if (nTask.startdate.getMinutes() < 10) {
                starttemptext = starthours+":0"+nTask.startdate.getMinutes()+startsuffix;
            }
            if (nTask.enddate.getMinutes() < 10) {
                endtemptext = endhours+":0"+nTask.enddate.getMinutes()+endsuffix;
            }
            times.setText(starttemptext+"-"+endtemptext);
            jPanel1.setSize(182, 50 * taskList.size());
            if (taskList.size() > 4) {
                jPanel1.setLayout(new GridLayout(taskList.size(), 1));
            } else {
                jPanel1.setLayout(new GridLayout(4, 1));
            }
            jPanel1.add(taskPanel);
            jPanel1.revalidate();
            jPanel1.repaint(); 
        }
    }
    
    public void reformat() {
        jPanel1.removeAll();
        for (int i = 0; i < taskList.size(); i++) {
            displayTask(taskList.get(i), i);
        }
        jPanel1.revalidate();
        jPanel1.repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }
    

    public static ArrayList<Task> taskList = new ArrayList<Task>();
    public Date today = new Date();
    public Date currentDay = new Date();
    public Date nextCurrentDay = new Date();
    public Date tomorrow = new Date();
    public Listener listener = new Listener(this);
    public SliderListener slistener = new SliderListener(this);
    
    //customized class, record each task
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddTask;
    private javax.swing.JButton btnLeft;
    private javax.swing.JButton btnProcrastinate;
    private javax.swing.JButton btnRight;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblTasksToday;
    private javax.swing.JScrollPane spnScrollPane;
    // End of variables declaration//GEN-END:variables
}

